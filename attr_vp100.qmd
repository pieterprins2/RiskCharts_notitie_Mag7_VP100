---
title: "VP100: “voldoende spreiding“ vs. “de index bijhouden”"
format: 
  html:
    embed-resources: true  
    toc: true
    code-fold: true
editor: source

execute: 
  echo: false
  warning: false
---

```{r echo=FALSE, warning=FALSE, message=FALSE}
#library(quantmod)
library(png)
#for charting
library(tibbletime) #rollify
library(slider) #rolling statistics
library(tidyquant) # xts, zoo, lubridate, performance_analytics, quantmod, TTR
library(tidyverse) # ggplot2, purrr, dplyr, tidyr, readr, tibble, stringr
library(lubridate) #datumfuncties
library(readxl) # xlsx inlezen
library(RColorBrewer) #kleuren
library(directlabels) #voor labels aan uiteinde van lijnen, geom_dl
library(ggrepel) #label repel
library(scales) #label_percent
library(broom) #tidy
library(scales) #pretty breaks
library(quarto)
library(gt) #tabellen
library(gtExtras) #tabellen
library(gridExtra) #meerdere grafieken op een pagina
library(paletteer)
library(rsconnect)
library(rlang)

load("RiRe.RData")

rsconnect::writeManifest()
```


```{r waarde-ontwikkeling_VP100_en_msdewin}
#| warning: false
#| column: page

data <- 
  attr_tabellen_RDRM_simple |> 
  filter(portfolio == "VP100") |> 
  select(date, VP100 = pf_rt_cum, MSDEWIN = BM_rt_cum) |> 
  pivot_longer(-date, values_to = "perf", names_to = "pf_bm") |> 
  mutate(pf_bm = factor(pf_bm, levels = c("VP100", "MSDEWIN"))) 

#voor in tekst
perf_VP100 <- 
  data |> filter(date == lastdate, pf_bm == "VP100") |> pull(perf)
perf_MSDEWIN <- 
  data |> filter(date == lastdate, pf_bm == "MSDEWIN") |> pull(perf)

```

### Waarde-ontwikkeling VP100 en MSDEWIN
De VP100 laat een mooie waarde-ontwikkeling zien. Vanaf de start in juni 2017 t/m juni 2025 een bruto performance van `r str_c(round(perf_VP100*100,1), "%")`. De performance van de MSDEWIN in die periode is `r str_c(round(perf_MSDEWIN*100,1), "%")`. Er is eerst sprake van outperformance, daarna van underperformance.

```{r waarde-ontwikkeling_VP100_en_msdewin_grafiek}
#| warning: false
#| column: page
#| fig-width: 10
#| fig-height: 3

data |> 
  ggplot(aes(x = date, y = perf, col = pf_bm)) +
  geom_line(linewidth = 1.5) +
  scale_color_manual(values = c(VP100green, bmgray)) +
  scale_y_continuous(labels = percent_format(), sec.axis = dup_axis()) +
  labs(x = "", y = "",
       title = str_c("VP100 vs. MSDEWIN van ",  
                          day(start_date_vp_vf),"-", month(start_date_vp_vf, label = TRUE), "-", year(start_date_vp_vf), " t/m ",
                          day(lastdate),"-", month(lastdate, label = TRUE), "-", year(lastdate))) +
  charts_custom_theme +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5, face = "bold")) 

```


Over de hele periode is sprake van een underperformance ("geometrisch" berekend) van `r str_c("(1 + ", round(100*(perf_VP100),1), "%)/(1 + ", round(100*(perf_MSDEWIN),1), "%) - 1 = ", round(100*((1 + perf_VP100)/(1+perf_MSDEWIN) - 1), 1), "%")`.

### Voldoende spreiding (lage standaarddeviatie)
Hoeveel individuele aandelen zijn er nodig voor een “goed gespreide portefeuille”? Het antwoord is enkele tientallen. Meer dan dat voegt weinig extra spreiding toe.

In de volgende figuur de volatiliteit (standaarddeviatie) van de portefeuille vs. die van de index.

```{r sd_VP100_en_BM}
#| warning: false
#| column: page
#| fig-width: 10
#| fig-height: 3
 
drie_datums <- c("2017-06-30", "2022-12-31", "2025-06-30")

data_sd_hele_periode <- 
  attr_tabellen_RDRM_simple |> 
  filter(portfolio == "VP100") |> 
  select(date, pf_rt, pf_rt_RD) |> 
  left_join(MSDEWIN_trr, by = c("date")) |> 
  filter(date > drie_datums[1]) |> 
  pivot_longer(names_to = "pf_BM", cols = c(pf_rt, pf_rt_RD, MSDEWIN_trr)) |>
  group_by(pf_BM) |> 
  reframe(sd = sd(value, na.rm = TRUE) * sqrt(12)) |> 
  mutate(pf_BM = case_when(pf_BM == "MSDEWIN_trr" ~ "MSDEWIN", 
                            pf_BM == "pf_rt" ~ "VP100",
                            pf_BM == "pf_rt_RD" ~ "VP100 exclusief cash"),
         pf_BM = factor(pf_BM, levels = c("VP100", "VP100 exclusief cash", "MSDEWIN"))) 
    
```

```{r sd_VP100_en_BM2}
#| column: page
#| fig-width: 10
#| fig-height: 3
#| warning: false

data_sd_twee_periodes <- 
  attr_tabellen_RDRM_simple |> 
  filter(portfolio == "VP100") |> 
  select(date, pf_rt, pf_rt_RD) |> 
  left_join(MSDEWIN_trr, by = c("date")) |> 
  filter(date > drie_datums[1]) |> 
  mutate(periode = ifelse(date <= "2022-12-31", "jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025"), 
         periode = factor(periode, levels = c("jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025"))) |> 
  pivot_longer(names_to = "pf_BM", cols = c(pf_rt, pf_rt_RD, MSDEWIN_trr)) |>
  group_by(pf_BM, periode) |> 
  reframe(sd = sd(value, na.rm = TRUE) * sqrt(12)) |> 
    mutate(pf_BM = case_when(pf_BM == "MSDEWIN_trr" ~ "MSDEWIN", 
                            pf_BM == "pf_rt" ~ "VP100",
                            pf_BM == "pf_rt_RD" ~ "VP100 exclusief cash"),
         pf_BM = factor(pf_BM, levels = c("VP100", "VP100 exclusief cash", "MSDEWIN")))

data_sd_hele_periode <- 
  data_sd_hele_periode |> 
  mutate(periode = "hele periode") |> 
  select(pf_BM, periode, sd)

data_sd_twee_periodes |> 
  bind_rows(data_sd_hele_periode) |>
  mutate(periode = factor(periode, levels = c("jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025", "hele periode"))) |> 
  ggplot(aes(x = periode, y = sd, fill = pf_BM, alpha = pf_BM)) + 
  geom_col(position = position_dodge()) + 
  scale_fill_manual(values = c(VP100green, VP100green, bmgray)) +
  scale_alpha_manual(values = c(1, 0.5, 1)) +
  scale_y_continuous(labels = percent_format(), sec.axis = dup_axis(), limits = c(0, 0.2)) +
  geom_text(aes(label = str_c(round(sd * 100, 1), "%")), col = "gray30", size = 4, fontface = "bold", position = position_dodge(width = 1), vjust = -1) +
  labs(x = "", y = "",
       title = "standaarddeviatie in twee periodes, VP100, portefeuille in- en exclusief cash vs. MSDEWIN") +
  charts_custom_theme +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
        plot.title = element_text(hjust = 0.5, face = "bold")) +
  guides(alpha = "none")      


  

```

De VP100 heeft een volatiliteit dicht bij die van de benchmark. Met plm. 25 individuele aandelen en een aantal sector-, regio- en een small cap ETF’s is de portefeuille goed gespreid.

Dat de volatiliteit iets lager was dan de benchmark komt doordat de portefeuille niet vol belegd was, vooral in de eerste periode.

### De index bijhouden (lage tracking error)
In de onderstaande figuur staan de verschillen per maand van de performance van de VP100 en die van de MSDEWIN. Deze cijfers betreffen de hele portefeuille, dus inclusief cash.

```{r verschillen_per_maand}
#| column: page
#| fig-width: 10
#| fig-height: 3
#| 
pf_bm_returns_si |> 
  filter(date >= start_date_vp_vf,
         date <= lastdate,
         portfolio %in% "VP100") |> 
  mutate(diff = pf_rt - BM_rt) |> 
  ggplot(aes(x=date, fill = color)) +
  geom_col(aes(y=diff)) +
  scale_fill_identity() + 
  scale_x_date(breaks = datum_breaks(start_date = start_date_vp_vf, end_date = lastdate)) +
  scale_y_continuous(labels = scales::percent_format(accuracy = 1), sec.axis = dup_axis()) +
  theme(plot.title = element_text(hjust = 0.5)) + 
  ggtitle(str_c("performance verschillen met de benchmark, VP100,",
         " van ",  
                          day(start_date_vp_vf),"-", month(start_date_vp_vf, label = TRUE), "-", year(start_date_vp_vf), " t/m ",
                          day(lastdate),"-", month(lastdate, label = TRUE), "-", year(lastdate))) +
  charts_custom_theme +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold"))
```

De (ex-post) tracking error is de standaarddeviatie daarvan op jaarbasis. Dat is 3,7%. De ex-ante tracking error (gebruik makend van huidige gewichten en een variantie-covariantiematrix) is 4%. Er is (als je veronderstelt dat rendementen normaal verdeeld zijn) een kans van ruwweg 68% dat de out- of underperformance op jaarbasis kleiner is dan dat en de kans is 95% is dat de uitkomst binnen + en – 2x dit getal valt.

### Verklaring van het verschil met de benchmark
De asset allocatie leverde de grootste negatieve bijdrage. De portefeuille is niet vol belegd geweest terwijl de markt is gestegen. Het resultaat RD is het verschil tussen de performance van het in RD belegde deel van de portefeuille en de MSDEWIN. In de eerste periode was dit sterk positief en in de tweede periode sterk negatief.

```{r}
#| column: page
#| fig-width: 10
#| fig-height: 3

attr_tabellen_RDRM_simple |> 
  filter(portfolio == "VP100") |> 
  select(date, totaal = er, `asset allocatie` = all_ff, `resultaat RD` = sel_ff_RD) |> 
  add_row(date = as.Date("2017-06-30"), totaal = 0, `asset allocatie` = 0, `resultaat RD` = 0) |>
  arrange(date) |>
  mutate(totaal = cumprod(totaal + 1),
         `asset allocatie` = cumprod(`asset allocatie` + 1), 
         `resultaat RD` = cumprod(`resultaat RD` + 1)) |> 
  filter(date %in% drie_datums) |> 
  select(date, totaal, `asset allocatie`, `resultaat RD`) |> 
  pivot_longer(cols = -date, names_to = "type", values_to = "index") |> 
  group_by(type) |>
#
    unique() |> 
 #
   mutate(resultaat = index/lag(index) - 1,
         periode = c(NA, "jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025")) |> 
  filter(!is.na(resultaat)) |> 
  select(-index, -date) |> 
  pivot_wider(names_from = periode, values_from = resultaat) |> 
  mutate('hele periode' = (1 + `jul-2017 t/m dec-2022`)*(1 + `jan-2023 t/m jun-2025`) - 1) |> 
  pivot_longer(cols = -type, names_to = "periode", values_to = "resultaat") |> 
  mutate(periode = factor(periode, levels = c("jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025", "hele periode")),
         type = factor(type, levels = c("asset allocatie", "resultaat RD", "totaal"))) |>
  ggplot(aes(x = periode, y = resultaat, fill = type)) +
  geom_col(position = position_dodge()) +
  scale_fill_manual(values = c(euroblue, usred, VP100green)) +
  scale_y_continuous(labels = percent_format(), sec.axis = dup_axis(), limits = c(-0.2, 0.2)) +
  geom_text(aes(label = str_c(round(resultaat * 100, 1), "%")), col = "gray30", size = 4, fontface = "bold", position = position_dodge(width = 1), vjust = -1) + 
  theme_minimal() +
  labs(x = "", y = "",
       title = "performance-attributie VP100,  asset allocatie, resultaat RD en totaal, \ntwee perioden en hele periode sinds juni 2017
",
       caption = NULL) +
  theme(plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold"),#, size = 25),
        legend.position = "bottom",
        legend.title = element_blank())
  
```

Ter illustratie hieronder het gewicht van cash en obligaties in de VP100.

```{r}
#| column: page
#| fig-width: 10
#| fig-height: 3
  asset_weights_pfs |> 
    filter(!asset == "Aandelen", portfolio %in% "VP100", date >= start_date_vp_vf, date <= lastdate) |>
    mutate(aset = factor(asset, levels = c("Obligaties", "Cash")) ) |>
  ggplot() +
    geom_area(aes(x = date, y = wt, fill = asset, col = asset), alpha = 0.3, position = "stack", ) +
    scale_y_continuous(labels = scales::percent_format(accuracy = 1), sec.axis = dup_axis()) +
    #scale_x_date(date_labels = "%b-%y", breaks = datum_breaks(start_date_vp_vf, lastdate)) +
    scale_color_manual(values = rev(c(bondspurple, cashblue)),
                      guide = guide_legend(reverse = FALSE)) +
    scale_fill_manual(values = rev(c(bondspurple, cashblue)),
                      guide = guide_legend(reverse = FALSE)) +
    labs(x = "", y = "") +
    ggtitle(str_c("cash en obligaties in VP100, van ",  
                          day(start_date_vp_vf), "-", month(start_date_vp_vf, label = TRUE), "-", year(start_date_vp_vf), " t/m ",
                          day(lastdate), "-", month(lastdate, label = TRUE), "-", year(lastdate))) +
    charts_custom_theme +
    theme_minimal() +
    theme(plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold"),#, size = 25),
        legend.position = "bottom",
        legend.title = element_blank())

```

### Verklaring van het resultaat RD
Hieronder het resultaat RD per jaar.

```{r resultaat_vp_rd_per_jaar}
#| column: page
#| fig-width: 10
#| fig-height: 3
#| 
attr_tabellen_RDRM_simple |> filter(portfolio == "VP100") |> 
  select(date, sel_ff_RD) |> 
  mutate(sel_ff_RD_index = cumprod(sel_ff_RD + 1), maand = month(date)) |> 
  filter(maand %in% c(6,12)) |> 
  mutate(n= row_number()) |> 
  filter(maand == 12 | n %in% c(1, 17)) |> 
  mutate(sel_ff_RD_periode = sel_ff_RD_index/lag(sel_ff_RD_index)- 1) |> 
  filter(!is.na(sel_ff_RD_periode)) |> 
  select(date, sel_ff_RD =sel_ff_RD_periode) |> 
  mutate(jaar = year(date))|> 
  ggplot(aes(x = jaar, y = sel_ff_RD)) +
  geom_col(fill = usred) +
  theme_minimal() +
  labs(x="", y="",
       title = "resultaat RD VP100 per jaar, van 30-jun-2017 t/m 30-jun-2025") +
  scale_y_continuous(labels = percent_format(), sec.axis = dup_axis(), limits = c(-0.1, 0.1)) +
  geom_text(aes(label = str_c(round(sel_ff_RD * 100, 1), "%")), col = "gray30", size = 4, fontface = "bold", position = position_dodge(width = 1), vjust = -1) + 
  charts_custom_theme +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold"))
```

Het reslutaat RD is uit te splitsen in sectorallocatie en aandelenselectie. De sectorallocatie is de bijdrage van de verdeling over de verschillende sectoren, de aandelenselectie is het resultaat van de keuze van individuele aandelen binnen die sectoren.

```{r}
#| column: page
#| fig-width: 10
#| fig-height: 3

attr_tabellen_pfs_sector_Bs_Ae_Se |> 
  filter(portfolio == "VP100") |> 
  select(date, sectorallocatie = All_ff, aandelenselectie = Sel_ff) |> 
  add_row(date = as.Date("2017-06-30"), sectorallocatie = 0, aandelenselectie = 0) |>
  arrange(date) |>
  mutate(sectorallocatie = cumprod(sectorallocatie + 1), 
         aandelenselectie = cumprod(aandelenselectie + 1)) |> 
  filter(date %in% drie_datums) |> 
  select(date, sectorallocatie, aandelenselectie) |> 
  pivot_longer(cols = -date, names_to = "type", values_to = "index") |> 
  group_by(type) |>
  mutate(resultaat = index/lag(index) - 1,
         periode = c(NA, "jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025")) |> 
  filter(!is.na(resultaat)) |> 
  select(-index, -date) |> 
  pivot_wider(names_from = periode, values_from = resultaat) |> 
  mutate('hele periode' = (1 + `jul-2017 t/m dec-2022`)*(1 + `jan-2023 t/m jun-2025`) - 1) |> 
  pivot_longer(cols = -type, names_to = "periode", values_to = "resultaat") |> 
  mutate(periode = factor(periode, levels = c("jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025", "hele periode")),
         type = factor(type, levels = c("sectorallocatie", "aandelenselectie"))) |>
  ggplot(aes(x = periode, y = resultaat, fill = type)) +
  geom_col(position = position_dodge(), alpha = 0.5) +
  scale_fill_manual(values = c(euroblue, usred)) +
  scale_y_continuous(labels = percent_format(), sec.axis = dup_axis(), limits = c(-0.15, 0.15)) +
  geom_text(aes(label = str_c(round(resultaat * 100, 1), "%")), col = "gray30", size = 4, fontface = "bold", position = position_dodge(width = 1), vjust = -1) +   
  theme_minimal() +
  labs(x = "", y = "",
       title = "performance-attributie resultaat RD VP100, sectorallocatie en aandelenselectie, \ntwee perioden en sinds juni 2017",
       caption = NULL) +
  charts_custom_theme +
  theme_minimal() +
  theme(plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold"),#, size = 25),
        legend.position = "bottom",
        legend.title = element_blank())
```

De sectorallocatie was in de eerste periode positief en in de tweede periode negatief. De aandelenselectie was in de eerste periode sterk positief, maar in de tweede periode sterk negatief. De aandelenselectie is de grootste bron van afwijking tussen de VP100 en de benchmark.

### Mag7 scenario
Een "Mag7 scenario" is een scenario waarin een beperkt aantal aandelen zorgt voor praktisch alle waardestijging van de index. Bij een beperkt aantal regels in een individuele-aandelenportefeuille bestaat een grote kans dat je een of meerdere van deze Mag7 niet hebt. Dan is de portefeuille weliswaar “goed gespreid”, maar je blijft achter bij de index.

Ter illustratie hieronder de performance van Mag7 aandelen en de MSDEWIN in beide periodes.

```{r mag_7_2_periodes}
#| column: page
#| fig-width: 10
#| fig-height: 7

mag7_hele_periode <-
  all_prices_eur_long |> 
  filter(ticker %in% c(grote_tickers$ticker, "MSDEWIN")) |> 
  filter(date %in% c(drie_datums[1], drie_datums[3])) |> 
  arrange(ticker, date) |> group_by(ticker) |> 
  mutate(perf_eur = price_eur/lag(price_eur)-1) |> 
  filter(!is.na(perf_eur)) |> 
  mutate(periode = "hele periode") 

mag7_twee_periodes <-
  mag7_twee_periodes <-
  all_prices_eur_long |> 
  filter(ticker %in% c(grote_tickers$ticker, "MSDEWIN")) |> 
  filter(date %in% drie_datums) |> 
  arrange(ticker, date) |> group_by(ticker) |> 
  mutate(perf_eur = price_eur/lag(price_eur)-1) |> 
  filter(!is.na(perf_eur)) |> 
  mutate(periode = ifelse(date == "2022-12-31", "jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025")) |>  
  filter(!is.na(perf_eur))


# mag7_twee_periodes |> bind_rows(mag7_hele_periode) |> 
#   mutate(periode = factor(periode, levels = c("jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025", "hele periode"))) |> 
#   select(-price_eur) |> 
#   ggplot(aes(x = ticker, y = perf_eur, group = periode, fill = periode)) + 
#   geom_col(position = position_dodge()) + 
#   scale_fill_manual(values = c("#E69F00", "#56B4E9", "green")) +
#   theme_minimal() + 
#   scale_y_continuous(labels = percent_format(), limits = c(-1, 50), sec.axis = dup_axis()) +
#   geom_text(aes(label = str_c(round(perf_eur * 100, 0), "%")), col = "gray30", size = 3, fontface = "bold", position = position_dodge(width = 1), vjust = -1) + 
#   labs(x = "", y = "",
#        title = "koersstijging in euro's, twee periodes, Mag7 en MSDEWIN") +
#   charts_custom_theme +
#   theme_minimal() +
#   theme(legend.position = "bottom",
#         legend.title = element_blank(),
#          plot.title = element_text(hjust = 0.45, vjust = 0, face = "bold"))
  
all_prices_eur_long |>
  filter(ticker %in% c(grote_tickers$ticker, "MSDEWIN")) |>
  mutate(ticker = factor(ticker, levels = c("META_UW", "AMZN_UW","TSLA_UW", "AAPL_UW", "NVDA_UW",  "MSFT_UW", "GOOGL_UW", "MSDEWIN"))) |> 
  filter(date %in% drie_datums) |>
  arrange(ticker, date) |> group_by(ticker) |>
  mutate(perf_eur = price_eur/lag(price_eur)-1) |>
  mutate(periode = ifelse(date == "2022-12-31", "jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025"),
         periode = factor(periode, levels = c("jul-2017 t/m dec-2022", "jan-2023 t/m jun-2025"))) |>
  filter(!is.na(perf_eur)) |>
  select(-price_eur) |>
  ggplot(aes(x = ticker, y = perf_eur, group = periode, fill = ticker, alpha = periode)) +
  geom_col(position = position_dodge()) +
  scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", bmgray)) +
  scale_alpha_manual(values = c(0.5, 1)) +
  theme_minimal() +
  scale_y_continuous(labels = percent_format(), limits = c(0, 10), sec.axis = dup_axis()) +
  geom_text(aes(label = str_c(round(perf_eur * 100, 0), "%")), col = "gray30", size = 4, fontface = "bold", position = position_dodge(width = 1), vjust = -1) +
  labs(x = "", y = "",
       title = "koersontwikkeling in euro's, twee periodes, Mag7 en MSDEWIN") +
  charts_custom_theme +
  theme_minimal() +
  theme(legend.position = "none",
        legend.title = element_blank(),
         plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold")) 
    
```
```{r gewicht_tickers_in_bm_historie}
#| column: page
#| warning: false

koersen_snapshot_date <-daily_bdh_fields_mtd |> 
  filter(date == snapshot_date, field == "PX_LAST")

wisselkoersen_snapshot_date <- 
  daily_bdh_fields_mtd |> 
  filter(str_starts(ticker, "EUR"), date == snapshot_date) |> 
  mutate(ticker = str_remove(ticker, "_USD"),
         ticker = str_sub(ticker, 4, 6)) |> 
  rename(CRNCY = ticker) |> 
  select(CRNCY, wisselkoers = value) |> 
  add_row(CRNCY = "EUR", wisselkoers = 1)

market_caps_eur_snapshot_date <-
  market_caps |> 
  left_join(currencies, by = c("ticker")) |> 
  left_join(koersen_snapshot_date, by = c("ticker")) |> 
  left_join(wisselkoersen_snapshot_date, by = "CRNCY") |> 
  mutate(market_cap_eur = market_caps / wisselkoers) |> 
  select(date, ticker, market_cap_eur) |>
  filter(!is.na(market_cap_eur))

MSDEWIN_market_cap_snapshot_date <- 
  market_caps_eur_snapshot_date |> 
  filter(ticker == "MSDEWIN") |> 
  pull(market_cap_eur)

SPY5_GY_market_cap_snapshot_date <-
  market_caps_eur_snapshot_date |> 
  filter(ticker == "SPX") |> 
  pull(market_cap_eur)

WTCH_NA_market_cap_snapshot_date <-
  market_caps_eur_snapshot_date |> 
  filter(ticker == "WTCH_NA") |> 
  pull(market_cap_eur)

XDWH_GY_market_cap_snapshot_date <-
  market_caps_eur_snapshot_date |> 
  filter(ticker == "XDWH_GY") |> 
  pull(market_cap_eur)


single_stock_tickers <- 
  holdings |> 
  filter(str_detect(type, "Stock")) |> 
  pull(ticker)

ticker_market_cap_snapshot_date <- function(ticker) {
  market_caps_eur_snapshot_date |> 
  filter(ticker == !!ticker, date == snapshot_date) |> 
  pull(market_cap_eur)
}

wt_sector_in_MSDEWIN_snapshot_date <- function(sector) {
  ticker_sector_weights_hist |> 
  filter(ticker == "IWDA_NA", sector == !!sector, date == snapshot_date) |> 
  pull(weight)
}

wt_IT_in_bm_snapshot_date <- ticker_sector_weights_hist |> filter(ticker == "IWDA_NA", sector == "Information Technology", date == snapshot_date) |> pull(weight)
wt_HC_in_bm_snapshot_date <- ticker_sector_weights_hist |> filter(ticker == "IWDA_NA", sector == "Health Care", date == snapshot_date) |> pull(weight)

wt_ticker_in_ETF_snapshot_date <- function(ETF = "WTCH_NA", sector = "Information Technology") {
   market_caps_eur_snapshot_date |> 
   left_join(holdings, by = "ticker") |>
   filter(str_detect(type, "Stock")) |>
   mutate(wt_ticker_in_ETF_snapshot_date = 
            ifelse(sector == !!sector, market_cap_eur/ticker_market_cap_snapshot_date(ETF), 0),
          wt_ticker_in_ETF_snapshot_date = ifelse(is.na(wt_ticker_in_ETF_snapshot_date), 0, wt_ticker_in_ETF_snapshot_date))
}

wt_ticker_in_bm_SPY5_WTCH_XDWH_snapshot_date <-
  market_caps_eur_snapshot_date |> 
  left_join(holdings, by = "ticker") |>
  filter(str_detect(type, "Stock")) |> # %in% single_stock_tickers) |>  
  mutate(wt_ticker_in_bm_snapshot_date = market_cap_eur/MSDEWIN_market_cap_snapshot_date,
         wt_ticker_in_bm_snapshot_date = ifelse(is.na(wt_ticker_in_bm_snapshot_date), 0, wt_ticker_in_bm_snapshot_date),
         wt_ticker_in_SPY5_GY_snapshot_date = ifelse(country == "USA", market_cap_eur/SPY5_GY_market_cap_snapshot_date, 0),
         wt_ticker_in_SPY5_GY_snapshot_date = ifelse(is.na(wt_ticker_in_SPY5_GY_snapshot_date), 0, wt_ticker_in_SPY5_GY_snapshot_date),
         wt_ticker_in_WTCH_NA_snapshot_date = ifelse(sector == "Information Technology", market_cap_eur/(MSDEWIN_market_cap_snapshot_date * wt_IT_in_bm_snapshot_date), 0),
         wt_ticker_in_WTCH_NA_snapshot_date = ifelse(is.na(wt_ticker_in_WTCH_NA_snapshot_date), 0, wt_ticker_in_WTCH_NA_snapshot_date),
         wt_ticker_in_XDWH_GY_snapshot_date = ifelse(sector == "Health Care", market_cap_eur/(MSDEWIN_market_cap_snapshot_date * wt_HC_in_bm_snapshot_date), 0),
         wt_ticker_in_XDWH_GY_snapshot_date = ifelse(is.na(wt_ticker_in_XDWH_GY_snapshot_date), 0, wt_ticker_in_XDWH_GY_snapshot_date)) |> 
  select(date, ticker, wt_ticker_in_bm_snapshot_date, wt_ticker_in_SPY5_GY_snapshot_date, wt_ticker_in_WTCH_NA_snapshot_date, wt_ticker_in_XDWH_GY_snapshot_date)

wt_ticker_in_bm_snapshot_date <-
  wt_ticker_in_bm_SPY5_WTCH_XDWH_snapshot_date |> 
  select(date, ticker, wt_ticker_in_bm_snapshot_date)
wt_ticker_in_SPY5_GY_snapshot_date <-
  wt_ticker_in_bm_SPY5_WTCH_XDWH_snapshot_date |> 
  select(date, ticker, wt_ticker_in_SPY5_GY_snapshot_date)
wt_ticker_in_WTCH_NA_snapshot_date <-
  wt_ticker_in_bm_SPY5_WTCH_XDWH_snapshot_date |> 
  select(date, ticker, wt_ticker_in_WTCH_NA_snapshot_date)
wt_ticker_in_XDWH_GY_snapshot_date <-
  wt_ticker_in_bm_SPY5_WTCH_XDWH_snapshot_date |> 
  select(date, ticker, wt_ticker_in_XDWH_GY_snapshot_date)

wt_ticker_in_bm <-
  all_trr_eur_long |> 
  left_join(MSDEWIN_trr, by = "date") |> 
  left_join(wt_ticker_in_bm_snapshot_date, by = c("date", "ticker")) |> 
  filter(ticker %in% single_stock_tickers) |> 
  arrange(desc(date)) |> 
  group_by(ticker) |> 
  fill(wt_ticker_in_bm_snapshot_date, .direction = "down") |>
  mutate(adjustment = (1 + trr) / (1 + MSDEWIN_trr),
         cum_adjustment = cumprod(adjustment), 
         wt_ticker_in_bm = ifelse(date == snapshot_date, wt_ticker_in_bm_snapshot_date,
                            wt_ticker_in_bm_snapshot_date/cum_adjustment))

# SPX
SPY5_GY_trr <- all_trr_eur_long |> filter(ticker == "SPY5_GY") |> ungroup() |>  select(date, SPY5_GY_trr = trr)

wt_ticker_in_SPY5_GY <-
  all_trr_eur_long |> 
  left_join(SPY5_GY_trr, by = "date") |> 
  left_join(wt_ticker_in_SPY5_GY_snapshot_date, by = c("date", "ticker")) |> 
  filter(ticker %in% single_stock_tickers) |> 
  arrange(desc(date)) |> 
  group_by(ticker) |> 
  fill(wt_ticker_in_SPY5_GY_snapshot_date, .direction = "down") |>
  mutate(adjustment = (1 + trr) / (1 + SPY5_GY_trr),
         cum_adjustment = cumprod(adjustment), 
         wt_ticker_in_SPY5_GY = ifelse(date == snapshot_date, wt_ticker_in_SPY5_GY_snapshot_date,
                            wt_ticker_in_SPY5_GY_snapshot_date/cum_adjustment),
         wt_ticker_in_SPY5_GY = ifelse(is.na(wt_ticker_in_SPY5_GY), 0, wt_ticker_in_SPY5_GY))
##

wt_from_SPY5_GY <-
  portfolios_tabel |> 
  filter(portfolio == "VP100", ticker %in% c("SPY5_GY")) |> 
  select(date, portfolio, SPY5_GY = ticker, SPY5_GY_wt = weight) |> 
  left_join(wt_ticker_in_SPY5_GY, by = c("date")) |> 
  mutate(weight = SPY5_GY_wt * wt_ticker_in_SPY5_GY) |> 
  ungroup() |>
  mutate(from = "SPY5_GY") |> 
  select(date, portfolio, ticker, from, weight)

# WTCH
WTCH_NA_trr <- all_trr_eur_long |> filter(ticker == "WTCH_NA") |> ungroup() |>  select(date, WTCH_NA_trr = trr)

wt_ticker_in_WTCH_NA <-
  all_trr_eur_long |> 
  left_join(WTCH_NA_trr, by = "date") |> 
  left_join(wt_ticker_in_WTCH_NA_snapshot_date, by = c("date", "ticker")) |> 
  filter(ticker %in% single_stock_tickers) |> 
  arrange(desc(date)) |> 
  group_by(ticker) |> 
  fill(wt_ticker_in_WTCH_NA_snapshot_date, .direction = "down") |>
  mutate(adjustment = (1 + trr) / (1 + WTCH_NA_trr),
         cum_adjustment = cumprod(adjustment), 
         wt_ticker_in_WTCH_NA = ifelse(date == snapshot_date, wt_ticker_in_WTCH_NA_snapshot_date,
                            wt_ticker_in_WTCH_NA_snapshot_date/cum_adjustment),
         wt_ticker_in_WTCH_NA = ifelse(is.na(wt_ticker_in_WTCH_NA), 0, wt_ticker_in_WTCH_NA))

wt_from_WTCH_NA <-
  portfolios_tabel |> 
  filter(portfolio == "VP100", ticker %in% c("WTCH_NA")) |> 
  select(date, portfolio, WTCH_NA = ticker, WTCH_NA_wt = weight) |> 
  left_join(wt_ticker_in_WTCH_NA, by = c("date")) |> 
  mutate(weight = WTCH_NA_wt * wt_ticker_in_WTCH_NA) |> 
  ungroup() |>
  mutate(from = "WTCH_NA") |> 
  select(date, portfolio, ticker, from, weight)

# XDWH
XDWH_GY_trr <- all_trr_eur_long |> filter(ticker == "XDWH_GY") |> ungroup() |>  select(date, XDWH_GY_trr = trr)

wt_ticker_in_XDWH_GY <-
  all_trr_eur_long |> 
  left_join(XDWH_GY_trr, by = "date") |> 
  left_join(wt_ticker_in_XDWH_GY_snapshot_date, by = c("date", "ticker")) |> 
  filter(ticker %in% single_stock_tickers) |> 
  arrange(desc(date)) |> 
  group_by(ticker) |> 
  fill(wt_ticker_in_XDWH_GY_snapshot_date, .direction = "down") |>
  mutate(adjustment = (1 + trr) / (1 + XDWH_GY_trr),
         cum_adjustment = cumprod(adjustment), 
         wt_ticker_in_XDWH_GY = ifelse(date == snapshot_date, wt_ticker_in_XDWH_GY_snapshot_date,
                            wt_ticker_in_XDWH_GY_snapshot_date/cum_adjustment),
         wt_ticker_in_XDWH_GY = ifelse(is.na(wt_ticker_in_XDWH_GY), 0, wt_ticker_in_XDWH_GY))

wt_from_XDWH_GY <-
  portfolios_tabel |> 
  filter(portfolio == "VP100", ticker %in% c("XDWH_GY")) |> 
  select(date, portfolio, XDWH = ticker, XDWH_wt = weight) |> 
  left_join(wt_ticker_in_XDWH_GY, by = c("date")) |> 
  mutate(weight = XDWH_wt * wt_ticker_in_XDWH_GY) |> 
  ungroup() |>
  mutate(from = "XDWH") |> 
  select(date, portfolio, ticker, from, weight)



##
wt_ETF_in_portfolio <- function(portfolio = "VP100", ETF = "SPY5_GY") {
  dates |> 
  mutate(!!sym(ETF) := 0, portfolio = !!portfolio) |> 
  left_join(portfolios_tabel, by = c("date", "portfolio")) |> 
   mutate(!!sym(ETF) := ifelse(ticker == !!ETF, weight, 0)) |> 
   select(date, portfolio, !!sym(ETF)) |>
   group_by(date) |>
   arrange(desc(!!sym(ETF))) |>
   slice(1) #|>
    #misschien filter(!is.na(!!sym(ticker))) 
}

wt_ticker_in_ETF <- function(portfolio = "VP100", ETF = "SPY5_GY") {
  all_trr_eur_long |> 
  left_join(get(str_c(ETF, "_trr")), by = "date") |> 
  left_join(get(str_c("wt_ticker_in_", ETF, "_snapshot_date")), by = c("date", "ticker")) |> 
  filter(ticker %in% single_stock_tickers) |> 
   arrange(desc(date)) |> 
   group_by(ticker) |> 
   fill(!!sym(str_c("wt_ticker_in_", ETF, "_snapshot_date")), .direction = "down") |>
    mutate(adjustment = (1 + trr) / (1 + !!sym(str_c(ETF, "_trr"))),
            cum_adjustment = cumprod(adjustment))#, 
   #         !!(str_c("wt_ticker_in_", ETF)) := ifelse(date == snapshot_date, !!sym(str_c("wt_ticker_in_", ETF, "_snapshot_date")),
   #                           !!sym(str_c("wt_ticker_in_", ETF, "_snapshot_date"))/cum_adjustment),
   #         wt_ticker_in_SPY5_GY = ifelse(is.na(wt_ticker_in_XDWH_GY), 0, wt_ticker_in_SPY5_GY))
}
##

##  

#VP100
wt_mag7s_in_VP100 <-
  portfolios_tabel |> 
  ungroup() |> 
  filter(portfolio == "VP100", ticker %in% grote_tickers$ticker) |> 
  mutate(from = "naam") |> 
  select(date, portfolio, ticker, from, weight) |> 
  bind_rows(wt_from_WTCH_NA)
 
```


### Gewicht Mag7 in MSDEWIN en in VP100

::: panel-tabset

#### Mag7 in MSDEWIN

```{r gewicht_mag7_in_bm_historie_grafiek}
#| column: page
#| fig-width: 10
#| fig-height: 7
#| warning: false
#| 

wt_ticker_in_bm |>
  filter(date < snapshot_date, date >= "2017-06-30") |> 
  filter(ticker %in% c(grote_tickers$ticker)) |>
  select(date, ticker, wt_ticker_in_bm) |> 
  mutate(ticker = factor(ticker, levels = c("META_UW", "AMZN_UW","TSLA_UW", "AAPL_UW", "NVDA_UW",  "MSFT_UW", "GOOGL_UW"))) |> 
  ggplot(aes(x=date, y = wt_ticker_in_bm, fill = ticker)) +
  geom_area(alpha = 0.9, position = "stack") +
    theme_minimal() +
  scale_y_continuous(labels = percent_format(), sec.axis = dup_axis(), limits = c(0, 0.3)) +
  scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", bmgray)) +
  labs(x = "", y = "",
       title = "gewicht Mag7 in MSDEWIN") +
  charts_custom_theme +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
         plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold"))
```

#### Mag7 in VP100

```{r gewicht_mag7_in_vp100_historie_grafiek}
#| column: page
#| fig-width: 10
#| fig-height: 7
#| warning: false
#| 

wt_mag7s_in_VP100 |>
  filter(date < snapshot_date, date >= "2017-06-30") |> 
  filter(ticker %in% c(grote_tickers$ticker)) |>
  mutate(from = factor(from, levels = c("naam", "WTCH_NA"))) |>
  mutate(ticker = factor(ticker, levels = c("META_UW", "AMZN_UW","TSLA_UW", "AAPL_UW", "NVDA_UW",  "MSFT_UW", "GOOGL_UW"))) |> 
  ggplot(aes(x = date, y = weight, fill = ticker, alpha = from)) +
  geom_area(position = "stack") +
    theme_minimal() +
  scale_y_continuous(labels = percent_format(), sec.axis = dup_axis(), limits = c(0, 0.3)) +
  scale_fill_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", bmgray)) +
  scale_alpha_manual(values = c(0.9, 0.7)) +
  labs(x = "", y = "",
       title = "gewicht Mag7 in VP100") +
  charts_custom_theme +
  theme_minimal() +
  theme(legend.position = "bottom",
        legend.title = element_blank(),
         plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold"))

```

#### OU gewicht Mag7 in VP100

```{r mag7_OU_grafiel}
#| column: page
#| fig-width: 10
#| fig-height: 7
#| warning: false
#| 
wt_mag7s_in_VP100 |> 
  group_by(date, ticker) |>
  reframe(weight = sum(weight, na.rm = TRUE)) |> 
  left_join(wt_ticker_in_bm, by = c("date", "ticker")) |> 
  mutate(OU_ticker = weight - wt_ticker_in_bm) |> 
  select(date, ticker, weight, wt_ticker_in_bm, OU_ticker) |> 
  filter(ticker %in% c(grote_tickers$ticker)) |>
  mutate(ticker = factor(ticker, levels = c("META_UW", "AMZN_UW","TSLA_UW", "AAPL_UW", "NVDA_UW",  "MSFT_UW", "GOOGL_UW"))) |> 
  ggplot(aes(x = date, y = OU_ticker, fill = ticker)) +
  geom_line(aes(col = ticker), alpha = 0.7, linewidth = 2) +
  scale_color_manual(values = c("#E69F00", "#56B4E9", "#009E73", "#F0E442", "#0072B2", "#D55E00", "#CC79A7", bmgray)) +
  geom_abline(aes(intercept = 0, slope = 0), alpha = 0.7) +
  scale_y_continuous(labels = percent_format(), sec.axis = dup_axis()) +
  facet_wrap(~ticker, ncol = 1) +
    labs(x = "", y = "",
       title = "OU gewicht Mag7 in VP100") +
  charts_custom_theme +
  theme_minimal() +
  theme(legend.position = "none",
        legend.title = element_blank(),
         plot.title = element_text(hjust = 0.5, vjust = 0, face = "bold"))

```

:::

### Verklaring aandelenselectieresultaat

```{r}
#| column: page
#| warning: false



```

Het positieve aandelenselectieresultaat in de eerste periode komt van een aantal namen die het goed deden in die periode (DSM, Visa, United Health, Pfizer, WTCH). Mag7 namen die het goed deden en ook in portefeuille waren zijn Apple, Google, direct en via WTCH. Nvidia en Tesla waren niet in portefeuille, maar met name Nvidia had ook nog geen groot gewicht in de index.

Het negatieve aandelenselectieresultaat in de tweede periode komt door namen in portefeuille die het slecht deden (Intel, Kering, Pfizer, en United Health) en door het (nog) niet hebben van een paar Mag7’s (Nvidia, Meta, Amazon en Tesla). Nvidia en Tesla zijn pas eind 2024 opgenomen in de portefeuille. 

De portefeuille had geen exposure naar Nvidia, Meta, Amazon en Tesla, mede omdat deze ook niet in de WTCH voorkomen.

### Meer individuele aandelen
Om in een Mag7 scenario, ervan uitgaande dat je van tevoren niet weet welke die Mag7 zijn, de index bij te houden (een lage tracking error) zul je er niet 15-30 moeten hebben maar eerder honderden. Simulatie over een lange periode, universum is ACWI.

![Bron: "FOMO in equity markets? Concentration risk in (sustainable) investing", Andreas Brøgger, Joren Koëter, and Mathijs van Dijk, June 2025, pagina 37, Panel D](Picture1.png){fig-align="center" width="60%"}

Je ziet de tracking error pas bij enkele honderden aandelen substantieel dalen. 

### Belangrijkste punten

- Goede performance
- De portefeuille is goed gespreid, met een volatiliteit dicht bij die van de benchmark.
- Ten opzichte van de benchmark is er sprake van een underperformance
  - De belangrijkste oorzaak is dat de portefeuille niet vol belegd was.
  - Daarnaast zorgt de aandelenselectie voor de grootste tussentijdse verschillen.
- Als
  - “het bijhouden van de index” behoort tot de doelstellingen van de portefeuille en
  - je rekening wilt houden met een "Mag7 scenario",
  - dan moeten er meer individuele aandelen en/of trackers opgenomen worden.



```{r}

```

